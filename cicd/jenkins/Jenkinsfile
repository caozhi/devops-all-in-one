node {
    def mvnHome
    def appproj_folder
    
    // env.JAVA_HOME = tool 'jdk1.8'

    // Sync codes
    stage('Preparation') { 
        git 'git@github.com:caozhi/sample-project.git'
        
        // maven needs to be installed and name should be 'mvn3' in configuratble tools
        mvnHome = tool 'mvn3'
        jdkHome = tool 'jdk1.8'
        
        appproj_folder = 'sample-app'
        
    }

   stage('Build') {
        // update build number
        
        // submit to git
        
        // Run the maven build
        dir('sample-app') {
            sh "'${mvnHome}/bin/mvn' clean install"
        }
    }

    stage('Packages') {
        junit 'sample-app/target/surefire-reports/TEST-*.xml'
        sh 'mv sample-app/target/*.war sample-app/target/sample-server-${BUILD_NUMBER}.war'
        archiveArtifacts 'sample-app/target/*.war'
        
        // todo: archive zip file
    }
    
    stage('Test') {
        // 1. send pacakge to test environment
        
        // 2. deploy new testing environment
        // one appinstance and one static instance
            // stop application -> deploy new package -> start application
        
        // 3. call status api to check the. -. Using polling
        
        // 4. [no real action] start to run funcational testing, performance testing or other necessary testing
        // !!!! 
    }
    
    stage('Staging') {
        // 1. send pacakge to test environment
        
        // 2. deploy new testing environment
        // three appinstance and one static instance
        
        // 3. call status api to check the 
        
        // 4. [no real action] start to run system testing and UAT or other necessary testing
        // !!!! 
    }
    
    stage('Prod') {
        
    }
}